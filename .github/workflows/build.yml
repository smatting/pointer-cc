name: build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-11
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Import certs
        shell: bash
        env:
          DEVELOPER_ID_APPLICATION_PEM: ${{ secrets.DEVELOPER_ID_APPLICATION_PEM }}
          DEV_KEY_P12_B64: ${{ secrets.DEV_KEY_P12_B64 }}
          DEV_KEY_P12_W: ${{ secrets.DEV_KEY_P12_W }}
        run: |
          set -eo pipefail
          echo -n "$DEVELOPER_ID_APPLICATION_PEM" > /tmp/dev_id_app.pem
          echo -n "$DEV_KEY_P12_B64" | base64 -d > /tmp/DEV_KEY_P12.p12
          pw=$(echo -n "$DEV_KEY_P12_W")
          security import /tmp/DEV_KEY_P12.p12 -k $HOME/Library/Keychains/login.keychain -P "$pw" -A "Stefan Dev Key"
          security import /tmp/dev_id_app.pem -k $HOME/Library/Keychains/login.keychain
          rm -f /tmp/dev_id_app.pem
          rm -f /tmp/DEV_KEY_P12.p12
          echo "succesfully imported"
          security find-certificate
          
          echo security find-identity -vp codesigning $HOME/Library/Keychains/login.keychain
          security find-identity -vp codesigning $HOME/Library/Keychains/login.keychain
          #
          # Developer ID Application: Stefan Matting (FPDFQ974RQ)
          # Developer ID Application: Stefan Matting (FPDFQ974RQ)

          echo "meh" > foo.txt; cert_name="Developer ID Application: Stefan Matting (FPDFQ974RQ)"; codesign --force --verify --verbose=100 --sign "$cert_name" foo.txt

      # - uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.10'
      #
      # - shell: bash
      #   env:
      #     POINTER_CC_VERSION: ${{ env.POINTER_CC_VERSION }} 
      #   run: |
      #     python3 --version
      #     python3 -m venv venv
      #     source venv/bin/activate
      #     pip install -r requirements.txt
      #     pip install -r requirements-stage2.txt
      #     ./scripts/build.sh
      #     ./scripts/package-mac.sh
